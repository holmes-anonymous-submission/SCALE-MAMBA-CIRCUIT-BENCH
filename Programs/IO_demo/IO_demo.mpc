
ch0=regint(0)
ch1=regint(1)
ch10=regint(10)
ch20=regint(20)
ch1000=regint(1000)
ch2000=regint(2000)
ch3000=regint(3000)

open_channel_with_return(ch1000)
# Write some data to file
outp = [sint(1), sint(2), sint(3), sint(4)]
output_shares(ch1000,*outp)
close_channel(ch1000)

a=open_channel_with_return(ch2000)
print_ln("Return Value From Open_Channel 2000 = %s",a)
open_channel_with_return(ch3000)
print_ln("Enter a single share from each player")
inp=[sint()]
input_shares(ch2000,*inp)
output_shares(ch3000,*inp)
close_channel(ch2000)
close_channel(ch3000)

open_channel_with_return(ch1)
open_channel_with_return(ch10)
open_channel_with_return(ch20)

for i in range(5):
  print_ln("Player zero enter a private gfp number")
  a=sint.get_private_input_from(0, 10)
  print_ln("Player one enter a private gfp number")
  b=sint.get_private_input_from(1, ch20)
  c=a*b
  print_ln("The product is being sent to player one")
  c.reveal_to(1, 0)
  c.reveal_to(1, 25)
  print_ln(' a=%s',reveal(a))
  print_ln(' b=%s',reveal(b))
  print_ln(' c=%s',reveal(c))

  print_ln("Every one enter two values (these MUST be the same, otherwise an abort will occur)")
  print_ln("The first input is a gfp element, the second is a regint value");
  d=cint.public_input()
  e=regint.public_input(ch10)
  print_ln("Printing these values");
  d.public_output()
  e.public_output(ch20)

close_channel(ch0)
close_channel(ch1)
close_channel(ch10)
close_channel(ch20)
  
